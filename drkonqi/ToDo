##Main Tasks
-------------

!!!
BugAwareness UI
Improve UI files i18n semantics

Update help ?

Include help in the details page, near the "Details:" label (ex. "What should I write this?" link with help)

- REVIEW criteria of minimum chars/words to use in the Title and Details fields

---

For KDE4.5+:

##- Waiting for productName()->product/component mapping (custom cgi file at BKO)
[[ currently bugzillalib detects unexistent products to later use the "kde" product ]]
##Update: local mappings file support already implemented.
Working on PHP script... implementation on server was delayed until we resolve
the bugtracking system change.
- Implement online mappings on svn/bugzilla as an addon file (will .php work?)

- Implement bugtracking-system-agnostic interface on KDE servers and adapt DrKonqi to interact with it
(this will also remove the HTML parsing code from DrKonqi itself, to put it on a remote script)

---

- Custom usefulness values needed by application (ex. Amarok wants only perfect backtraces...)

- Check for plugins ? (example, if plasma crashes, which libs were loaded, which lib caused the crash)
This is useful to determine if some external plugin is involved
(I don't know if this is technically possible)
- Read and upload as attachment (cat /proc/PID/maps), memmap

- Application detection: ask for or detect specific things depending on application
   ie konqueror: url, plasma: plasmoids in use, kopete: protocol, etc.

- Implement TerminalDebuggerLauncher (the idea is to use the same trick as the one used in the installdbgsymbols.sh examples)

- BacktraceGenerator should not be allowed to start if another debugger is running.
  Add some check and possibly some signal indicating this state. As a consequence,
  remove the call to DrKonqi::debuggerManager()->debuggerIsRunning() from BacktraceWidget
  to make it trully independent from drkonqi.

- Make a docs dir and add documentation for:
  1) the format of the debugger files
  2) The dbus interface
  + move README.packagers in there with a proper name.
  
- Register dynamic debug area (see dfaure's mail on k-c-d).

##Brainstorming
--------------

- Display the time of the crash
("I came back to the computer some time later and drkonqi was there..
when the application crashed? during the night?") (by sreich)

- Usability review and suggestions:
http://blogs.msdn.com/oldnewthing/archive/2003/09/01/54734.aspx (by Maciej)

- Hide backtrace from user (only show progress and backtrace status)??

- Search in backtrace (esp. for [KCrash Handler])
- Backtrace syntax highlighting (xml parser+ some qt/kde class ?)

- Option to "don't show DrKonqi for this(X) app"
- Option to avoid drkonqi at all (setting KDE_DEBUG=1), and GUI to renable it

#Later
---------

- Implement a proper DBus interface.

#DONE
-------

"- If a possible duplicate is marked as FIXED, show a better (banner) message so the user will notice....


!!IMPORTANT: (to be done before 2009Nov25 / String Freeze)
- Update "AboutBugReporting" guide to reflect the new workflow
- Review the confirmation dialog in the Bug Report Information page:
if the text is not long enough, we dismiss the whole report saying something like "a report without a good description
will only waste bug triagers and developers time"...

##- Use https://bugs.kde.org/enter_bug.cgi?product=X to fetch product versions... (it will reduce server load)

##Bugzilla DrKonqi reports cleanup:
Wontfix: 143243, 185547

---------
---------

* Crashes on Shutdown:

https://bugs.kde.org/show_bug.cgi?id=126073 ->
**** Restore block shutdown/logout while DrKonqi window is up
(to catch crashes on shutdown)
- Config option to:
  - (default) Show a feedback indicator for a "automatically closing window" timer (and continue with shutdown)
  - non-default Block shutdown/logout completely, do not use a closing timer.

- Ask Seli for Session Management stuff (we need to ask from code if we are in the middle of a shutdown process)
- Use " unsetenv("SESSION_MANAGER");" again on main.cpp  (http://websvn.kde.org/trunk/kdebase/drkonqi/main.cpp?r1=408177&r2=408176&pathrev=408177)

- Startkde waiting for drkonqi to exit->
     # wait if there's any crashhandler shown
318          while dcop | grep -q ^drkonqi- ; do
319              sleep 5
320          done

"   while qdbus | grep "^[^w]*org.kde.drkonqi" > /dev/null ; do sleep 5; done  "
http://websvn.kde.org/trunk/kdebase/startkde?r1=408177&r2=408176&pathrev=408177

http://websvn.kde.org/?view=rev&revision=408177

bool KSessionManager::saveState     (   QSessionManager &        sm      )       [virtual]
void QApplication::saveState ( QSessionManager & manager ) 
