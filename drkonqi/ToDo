#Assigned
# Who / What
--------------

        
##Unassigned
-------------

Disable DEBUG menu-button when GDB is running on the process
GetBacktraceWidget... don't start the dbg if the there is another debugger running
((
[18:23:59] <gkiagia> Dario_Andres: check if the BacktraceParser is in Loading state
[18:24:25] <gkiagia> if it is, the debugger running is BacktraceParser, otherwise it's some external one
[18:24:41] <Dario_Andres> gkiagia: ok... so if not Loading I should check for the debuggerrunning
[18:24:42] <gkiagia> BacktraceGenerator I mean
[18:24:54] <gkiagia> yes
))

Use - Send/Sending/Sent Bug report for last page
Allow to go back on Conclusions pages to change checkboxes...

Relayout the main dialog (where to put the advanced thing, below or over another widget in the stack? )

waiting for productName()->product/component mapping (custom cgi file at BKO)
( if no combination is found, revert to "kde" product )
[[ currently bugzillalib detects unexistent products to later use the "kde" product ]]

Remove strings from profiles-rc. Use strings i18n when needed
The signal explanations aren't required... as we use it only for devs.. and they already know..

fix awarenesspage layout

add warns about we want text in english !! (partly done)

Finish "about bug reporting steps" (guide)  (documentation format ?)

Check leaks, crashes

krazy2 checks (partially done)

check what all the options in KrashConf are meant to do and use them appropriately or drop them (i.e review options)

#Done
---------

detect if the pid isn't set (?) 

improve "restart application" using the original command line options
(this needs modify kdelibs/kcrash to pass the whole arguments list to drkonqi)

//fix kwallet... ? use konqueror bko logic LATER

#Extract interfaces to .UI files
    #getbacktracewidget

Add Translation i18n (with contexts) . change HTML tags (are they invalid when using i18n???)
http://techbase.kde.org/Development/Tutorials/Localization/i18n_Semantics
        
#Rework Bug awareness text
// const pointers ? LATER
//Use KGUIItem to create KPushButton
//Set help for gui items, whats this,
#better logic to determine if the bug was commited (better html parsing?) DONE using regexp

change "report to maintainer" to "send email to maintainer" / "open maintainer web page"

Enable help button on assistant ?
### merge crashinfo  + krashconf ?? LATER

#busy cursor -> progressbar 
#"busy" progressbar for getbacktracewidgets
# kio progressbar for bugzilla related operations (only for post operations.. login and commit )
( using StatusWidget for status + busy state )


way to get graphical feedback of KToolInvocation:invokeMailer

extract methods from crashInfo to SystemInfo (?) (like getOS, getKDE .. )

#implement save report
#QNetworkAccessManager -> KIO
    http://api.kde.org/4.x-api/kdelibs-apidocs/kio/html/classKIO_1_1TransferJob-members.html
#KWallet integration
#Relayout getBacktraceWidget buttons/labels , layouts

#Each page widget should emit setNextButton() on aboutToShow() (when needed by the widget)
#Remember to connect the setNextButton signal

#Discuss , when to launch the kWallet dialog..........
( currently, if the wallet doesn't exist, it prompts to create it when the login 
information is entered the first time. If the wallet exists, it prompts for password when
showing the login page, and it allows autocomplete the data )

#Add reporting steps to assistant
    need permission about bugstest.kde.org to play with commits
    
#validate KJob result state;
    #done for fetchBugReport and searchBugs .. (error signals added)
    needed for login, and commit
    
#Use m_varName scheme, order header files
    #drkonqiassistantpages
    #aboutbugreportingdialog
    #bugzillalib
    #drkonqidialog
    #drkonqibugreport
    #crashinfo
    #usefulnessmeter