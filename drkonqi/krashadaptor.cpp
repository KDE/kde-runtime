/*
 * This file was generated by dbusidl2cpp version 0.4
 * when processing input file -
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 */

#include "krashadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class KrashAdaptor
 */

KrashAdaptor::KrashAdaptor(QObject *parent)
   : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

KrashAdaptor::~KrashAdaptor()
{
    // destructor
}

QByteArray KrashAdaptor::appName()
{
    // handle method call org.kde.Krash.appName
    QByteArray out0;
    QMetaObject::invokeMethod(parent(), "appName", Q_RETURN_ARG(QByteArray, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->appName();
    return out0;
}

QString KrashAdaptor::errorDescriptionText()
{
    // handle method call org.kde.Krash.errorDescriptionText
    QString out0;
    QMetaObject::invokeMethod(parent(), "errorDescriptionText", Q_RETURN_ARG(QString, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->errorDescriptionText();
    return out0;
}

int KrashAdaptor::pid()
{
    // handle method call org.kde.Krash.pid
    int out0;
    QMetaObject::invokeMethod(parent(), "pid", Q_RETURN_ARG(int, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->pid();
    return out0;
}

QString KrashAdaptor::programName()
{
    // handle method call org.kde.Krash.programName
    QString out0;
    QMetaObject::invokeMethod(parent(), "programName", Q_RETURN_ARG(QString, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->programName();
    return out0;
}

void KrashAdaptor::registerDebuggingApplication(const QString &launchName)
{
    // handle method call org.kde.Krash.registerDebuggingApplication
    QMetaObject::invokeMethod(parent(), "registerDebuggingApplication", Q_ARG(QString, launchName));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->registerDebuggingApplication(launchName);
}

bool KrashAdaptor::safeMode()
{
    // handle method call org.kde.Krash.safeMode
    bool out0;
    QMetaObject::invokeMethod(parent(), "safeMode", Q_RETURN_ARG(bool, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->safeMode();
    return out0;
}

QString KrashAdaptor::signalName()
{
    // handle method call org.kde.Krash.signalName
    QString out0;
    QMetaObject::invokeMethod(parent(), "signalName", Q_RETURN_ARG(QString, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->signalName();
    return out0;
}

int KrashAdaptor::signalNumber()
{
    // handle method call org.kde.Krash.signalNumber
    int out0;
    QMetaObject::invokeMethod(parent(), "signalNumber", Q_RETURN_ARG(int, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->signalNumber();
    return out0;
}

QString KrashAdaptor::signalText()
{
    // handle method call org.kde.Krash.signalText
    QString out0;
    QMetaObject::invokeMethod(parent(), "signalText", Q_RETURN_ARG(QString, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->signalText();
    return out0;
}

bool KrashAdaptor::startedByKdeinit()
{
    // handle method call org.kde.Krash.startedByKdeinit
    bool out0;
    QMetaObject::invokeMethod(parent(), "startedByKdeinit", Q_RETURN_ARG(bool, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->startedByKdeinit();
    return out0;
}

QString KrashAdaptor::whatToDoText()
{
    // handle method call org.kde.Krash.whatToDoText
    QString out0;
    QMetaObject::invokeMethod(parent(), "whatToDoText", Q_RETURN_ARG(QString, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->whatToDoText();
    return out0;
}


#include "krashadaptor.moc"
