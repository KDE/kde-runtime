AC_DEFUN(AC_FIND_BZIP2,
[
AC_MSG_CHECKING([for bzDecompress in libbz2])
AC_CACHE_VAL(ac_cv_lib_bzip2,
[
AC_LANG_C
kde_save_LIBS="$LIBS"
LIBS="$all_libraries $USER_LDFLAGS -lbz2 $LIBSOCKET"
kde_save_CFLAGS="$CFLAGS"
CFLAGS="$CFLAGS $all_includes $USER_INCLUDES"
AC_TRY_LINK(dnl
[
#define BZ_NO_STDIO
#include<bzlib.h>
],
            [ bz_stream s; (void) bzDecompress(&s); ],
            eval "ac_cv_lib_bzip2='-lbz2'",
            eval "ac_cv_lib_bzip2=no")
LIBS="$kde_save_LIBS"
CFLAGS="$kde_save_CFLAGS"
])dnl
AC_MSG_RESULT($ac_cv_lib_bzip2)

if test ! "$ac_cv_lib_bzip2" = no; then
  BZIP2DIR=bzip2

  dnl LIBBZ2="$ac_cv_lib_bzip2"
  dnl AC_SUBST(LIBBZ2)

else
  
   AC_MSG_CHECKING([for BZ2_bzDecompress in libbz2])
   AC_CACHE_VAL(ac_cv_lib_bzip2_prefix,
   [
   AC_LANG_C
   kde_save_LIBS="$LIBS"
   LIBS="$all_libraries $USER_LDFLAGS -lbz2 $LIBSOCKET"
   kde_save_CFLAGS="$CFLAGS"
   CFLAGS="$CFLAGS $all_includes $USER_INCLUDES"
   AC_TRY_LINK(dnl
   [
   #define BZ_NO_STDIO
   #include<bzlib.h>
   ],
               [ bz_stream s; (void) BZ2_bzDecompress(&s); ],
               eval "ac_cv_lib_bzip2_prefix='-lbz2'",
               eval "ac_cv_lib_bzip2_prefix=no")
   LIBS="$kde_save_LIBS"
   CFLAGS="$kde_save_CFLAGS"
   ])dnl

   AC_MSG_RESULT($ac_cv_lib_bzip2_prefix)
   BZIP2DIR=bzip2    
   AM_CONDITIONAL(include_BZIP2, test ! "$ac_cv_lib_bzip2_prefix" = no)
fi
AM_CONDITIONAL(include_BZIP2, test -n "$BZIP2DIR")
])

AC_FIND_BZIP2

