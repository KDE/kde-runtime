/*
 * This file was generated by dbusidl2cpp version 0.4
 * when processing input file org.kde.MediaManager.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 */

#ifndef MEDIAMANAGERADAPTOR_H_89541149448352
#define MEDIAMANAGERADAPTOR_H_89541149448352

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.kde.MediaManager
 */
class MediaManagerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.MediaManager")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.MediaManager\" >\n"
"    <signal name=\"mediumAdded\" >\n"
"      <arg direction=\"out\" type=\"s\" name=\"name\" />\n"
"      <arg direction=\"out\" type=\"b\" name=\"allowNotification\" />\n"
"    </signal>\n"
"    <signal name=\"mediumRemoved\" >\n"
"      <arg direction=\"out\" type=\"s\" name=\"name\" />\n"
"      <arg direction=\"out\" type=\"b\" name=\"allowNotification\" />\n"
"    </signal>\n"
"    <signal name=\"mediumChanged\" >\n"
"      <arg direction=\"out\" type=\"s\" name=\"name\" />\n"
"      <arg direction=\"out\" type=\"b\" name=\"allowNotification\" />\n"
"    </signal>\n"
"    <method name=\"fullList\" >\n"
"      <arg direction=\"out\" type=\"as\" />\n"
"    </method>\n"
"    <method name=\"properties\" >\n"
"      <arg direction=\"out\" type=\"as\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"name\" />\n"
"    </method>\n"
"    <method name=\"nameForLabel\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"label\" />\n"
"    </method>\n"
"    <method name=\"setUserLabel\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"name\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"label\" />\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"reloadBackends\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"removablePlug\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"devNode\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"label\" />\n"
"    </method>\n"
"    <method name=\"removableUnplug\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"devNode\" />\n"
"    </method>\n"
"    <method name=\"removableCamera\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"devNode\" />\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    MediaManagerAdaptor(QObject *parent);
    virtual ~MediaManagerAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    QStringList fullList();
    QString nameForLabel(const QString &label);
    QStringList properties(const QString &name);
    Q_NOREPLY void reloadBackends();
    bool removableCamera(const QString &devNode);
    bool removablePlug(const QString &devNode, const QString &label);
    bool removableUnplug(const QString &devNode);
    Q_NOREPLY void setUserLabel(const QString &name, const QString &label);
Q_SIGNALS: // SIGNALS
    void mediumAdded(const QString &name, bool allowNotification);
    void mediumChanged(const QString &name, bool allowNotification);
    void mediumRemoved(const QString &name, bool allowNotification);
};

#endif
